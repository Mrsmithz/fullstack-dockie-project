pipeline {
    agent any
    
    environment {
        MONGODB_URI = 'mongodb+srv://mrsmithz:123456Za@cluster0.fydss.mongodb.net/Dockie-dev'
        PORT = 8000
    }

    stages {
        stage('Pull code from branch main') {
            steps {
                git branch: 'main', url: 'https://github.com/Mrsmithz/Project-SW-Dev-and-Env.git'
            }
        }
        stage('Download dependency') {
            steps {
                dir('backend') {
                    sh 'npm install'
                }
            }
        }
        stage('Run unit test') {
            steps {
                dir('backend') {
                    sh 'npm run test'
                }
            }
        }
        stage('Create unit test report') {
            steps {
                dir('backend') {
                    script {
                        if (!fileExists('reports')) {
                            sh 'mkdir reports'
                        }
                    }
                    sh 'npm run test 2> reports/unit.txt'
                    publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, keepAll: true, reportDir: 'reports', reportFiles: 'unit.txt', reportName: 'Unit Test Report', reportTitles: 'Unit Test Report'])
                }
            }
        }
        stage('Create unit test coverage report') {
            steps {
                dir('backend') {
                    publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, keepAll: true, reportDir: 'coverage/lcov-report', reportFiles: 'index.html', reportName: 'Unit Test Coverage Report', reportTitles: 'Unit Test Coverage Report'])
                }
            }
        }
        stage('deploy') {
            steps {
                script  {
                    def remote = [:]
                    remote.name = "root"
                    remote.host = '159.65.12.177'
                    remote.user = 'root'
                    remote.password = 'xitgmLwmp12q'
                    remote.allowAnyHosts = true
                    sshCommand remote: remote, command: "git clone https://github.com/Mrsmithz/Project-SW-Dev-and-Env.git"
                    sshCommand remote: remote, command: "docker-compose -f Project-SW-Dev-and-Env/deployment/docker-compose.yaml build express-app"
                    sshCommand remote: remote, command: "docker-compose -f Project-SW-Dev-and-Env/deployment/docker-compose.yaml up express-app -d"
                    sshCommand remote: remote, command: "rm -r Project-SW-Dev-and-Env"
                }
            }
        }
    }
}